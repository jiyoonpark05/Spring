<?xml version="1.0" encoding="UTF-8"?><testrun name="UserDaoJunitFinal (5)" project="eHR0206" tests="4" started="4" failures="0" errors="1" ignored="2">
  <testsuite name="com.ehr.UserDaoJunitFinal" time="0.559">
    <testcase name="getAll" classname="com.ehr.UserDaoJunitFinal" time="0.26"/>
    <testcase name="addAndGet" classname="com.ehr.UserDaoJunitFinal" time="0.298">
      <error>org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [ INSERT			  
 INTO USERS        
   (               
     u_id,         
     name,         
     passwd,       
     h_level,      
     login,        
     recommend,    
     email,        
     reg_dt        
   )               
   VALUES          
   (               
     ?,            
     ?,            
     ?,            
     ?,            
     ?,            
     ?,            
     ?,            
     SYSDATE        
   )               
]; ORA-00001: 무결성 제약 조건(HRSPRING.PK_USERS)에 위배됩니다
; nested exception is java.sql.SQLIntegrityConstraintViolationException: ORA-00001: 무결성 제약 조건(HRSPRING.PK_USERS)에 위배됩니다
&#13;
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)&#13;
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)&#13;
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:649)&#13;
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:870)&#13;
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:931)&#13;
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:941)&#13;
	at com.ehr.UserDaoJdbc.add(UserDaoJdbc.java:155)&#13;
	at com.ehr.UserDaoJunitFinal.addAndGet(UserDaoJunitFinal.java:134)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:498)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)&#13;
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)&#13;
	at java.lang.Thread.run(Thread.java:748)&#13;
Caused by: java.sql.SQLIntegrityConstraintViolationException: ORA-00001: 무결성 제약 조건(HRSPRING.PK_USERS)에 위배됩니다
&#13;
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:445)&#13;
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)&#13;
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:879)&#13;
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:450)&#13;
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:192)&#13;
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)&#13;
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:207)&#13;
	at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:1044)&#13;
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1329)&#13;
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3584)&#13;
	at oracle.jdbc.driver.OraclePreparedStatement.executeUpdate(OraclePreparedStatement.java:3665)&#13;
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeUpdate(OraclePreparedStatementWrapper.java:1352)&#13;
	at org.springframework.jdbc.core.JdbcTemplate$2.doInPreparedStatement(JdbcTemplate.java:877)&#13;
	at org.springframework.jdbc.core.JdbcTemplate$2.doInPreparedStatement(JdbcTemplate.java:870)&#13;
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:633)&#13;
	... 22 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="getFailure" classname="com.ehr.UserDaoJunitFinal" time="0.0" ignored="true"/>
    <testcase name="count" classname="com.ehr.UserDaoJunitFinal" time="0.0" ignored="true"/>
  </testsuite>
</testrun>
