<?xml version="1.0" encoding="UTF-8"?><testrun name="UserDaoJunitFinal (5)" project="eHR0206" tests="5" started="5" failures="0" errors="1" ignored="3">
  <testsuite name="com.ehr.UserDaoJunitFinal" time="0.967">
    <testcase name="getAll" classname="com.ehr.UserDaoJunitFinal" time="0.332" ignored="true"/>
    <testcase name="addAndGet" classname="com.ehr.UserDaoJunitFinal" time="0.525"/>
    <testcase name="retrieve" classname="com.ehr.UserDaoJunitFinal" time="0.11">
      <error>org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [ SELECT T1.*,T2.*										  
 FROM(                                                    
 SELECT 				                                     
         B.u_id                                           
        ,B.name                                           
        ,B.passwd                                         
        ,B.h_Level                                        
        ,B.login                                          
        ,B.recommend                                      
        ,B.email                                          
        ,TO_CHAR(b.reg_dt,'YYYY-MM-DD') reg_dt            
        ,B.rnum								             
  FROM(                                                   
   SELECT ROWNUM AS rnum,A.*                              
   FROM (                                                 
                                                          
         SELECT *                                         
         FROM users                                       
         --SEARCH CONDITION                               
         WHERE u_id like '%'                              
         ORDER BY reg_dt DESC                             
 )A                                                       
 WHERE ROWNUM &lt;=(?*(?-1)+?) )B 			     		   	 
 WHERE B.rnum &gt;=(?*(?-1)+1)           				     
 )T1                                                      
   CROSS JOIN                                             
 ( SELECT COUNT(*)                                        
   FROM users                                             
  )T2                                                     
   --SEARCH CONDITION                                     
]; nested exception is java.sql.SQLException: 부적합한 열 이름&#13;
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:231)&#13;
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)&#13;
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:649)&#13;
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:684)&#13;
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:716)&#13;
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:726)&#13;
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:776)&#13;
	at com.ehr.UserDaoJdbc.retrieve(UserDaoJdbc.java:146)&#13;
	at com.ehr.UserDaoJunitFinal.retrieve(UserDaoJunitFinal.java:62)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:498)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)&#13;
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:252)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:94)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)&#13;
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)&#13;
Caused by: java.sql.SQLException: 부적합한 열 이름&#13;
	at oracle.jdbc.driver.OracleStatement.getColumnIndex(OracleStatement.java:3711)&#13;
	at oracle.jdbc.driver.OracleResultSetImpl.findColumn(OracleResultSetImpl.java:2763)&#13;
	at oracle.jdbc.driver.OracleResultSet.getInt(OracleResultSet.java:434)&#13;
	at com.ehr.UserDaoJdbc$1.mapRow(UserDaoJdbc.java:35)&#13;
	at com.ehr.UserDaoJdbc$1.mapRow(UserDaoJdbc.java:1)&#13;
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:93)&#13;
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:60)&#13;
	at org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:697)&#13;
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:633)&#13;
	... 37 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="getFailure" classname="com.ehr.UserDaoJunitFinal" time="0.0" ignored="true"/>
    <testcase name="count" classname="com.ehr.UserDaoJunitFinal" time="0.0" ignored="true"/>
  </testsuite>
</testrun>
