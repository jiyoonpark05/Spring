<?xml version="1.0" encoding="UTF-8"?><testrun name="UserDaoJunitFinal (5)" project="eHR0206" tests="6" started="6" failures="0" errors="1" ignored="3">
  <testsuite name="com.ehr.UserDaoJunitFinal" time="1.128">
    <testcase name="getAll" classname="com.ehr.UserDaoJunitFinal" time="0.34" ignored="true"/>
    <testcase name="update" classname="com.ehr.UserDaoJunitFinal" time="0.476">
      <error>org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [ UPDATE users		        
 SET 				        
      ,name      = ?         
      ,passwd    = ?         
      ,h_Level   = ?         
      ,login     = ?         
      ,recommend = ?         
      ,email     = ?         
      ,reg_dt    = SYSDATE   
 WHERE u_id    = ?           
]; nested exception is java.sql.SQLSyntaxErrorException: ORA-01747: 열명을 올바르게 지정해 주십시오
&#13;
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:91)&#13;
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)&#13;
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)&#13;
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:649)&#13;
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:870)&#13;
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:931)&#13;
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:941)&#13;
	at com.ehr.UserDaoJdbc.update(UserDaoJdbc.java:86)&#13;
	at com.ehr.UserDaoJunitFinal.update(UserDaoJunitFinal.java:87)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:498)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)&#13;
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:252)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:94)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)&#13;
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)&#13;
Caused by: java.sql.SQLSyntaxErrorException: ORA-01747: 열명을 올바르게 지정해 주십시오
&#13;
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:445)&#13;
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)&#13;
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:879)&#13;
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:450)&#13;
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:192)&#13;
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)&#13;
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:207)&#13;
	at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:1044)&#13;
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1329)&#13;
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3584)&#13;
	at oracle.jdbc.driver.OraclePreparedStatement.executeUpdate(OraclePreparedStatement.java:3665)&#13;
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeUpdate(OraclePreparedStatementWrapper.java:1352)&#13;
	at org.springframework.jdbc.core.JdbcTemplate$2.doInPreparedStatement(JdbcTemplate.java:877)&#13;
	at org.springframework.jdbc.core.JdbcTemplate$2.doInPreparedStatement(JdbcTemplate.java:870)&#13;
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:633)&#13;
	... 36 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="addAndGet" classname="com.ehr.UserDaoJunitFinal" time="0.281"/>
    <testcase name="retrieve" classname="com.ehr.UserDaoJunitFinal" time="0.031"/>
    <testcase name="getFailure" classname="com.ehr.UserDaoJunitFinal" time="0.0" ignored="true"/>
    <testcase name="count" classname="com.ehr.UserDaoJunitFinal" time="0.0" ignored="true"/>
  </testsuite>
</testrun>
